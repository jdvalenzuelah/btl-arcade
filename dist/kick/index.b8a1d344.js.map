{"mappings":"AAAA,SAASA,UAAUC,GACf,MAAO,UAAUA,GACrB,CAEA,SAASC,cAAcC,EAAMC,GACzBC,QAAQC,IAAI,qBACZ,IAAIC,EAAaC,KAAKC,UAAUL,GAChCM,aAAaC,QAAQX,UAAUG,GAAOI,EAC1C,CAEA,SAASK,eAAeT,GACpB,IAAIU,EAAQH,aAAaI,QAAQd,UAAUG,IAE3C,OAAOU,EAAQL,KAAKO,MAAMF,GAAS,IACvC,CAEA,SAASG,WAAWb,EAAMc,GAEtB,GADAZ,QAAQC,IAAI,mBACRW,EAEA,OADAZ,QAAQC,IAAI,sDACLM,eAAeT,GAG1B,GAAGc,EAASC,SAGR,OAFAb,QAAQC,IAAI,yCACZJ,cAAcC,EAAMc,GACbA,EAGX,IAAIJ,EAAQD,eAAeT,GAK3B,OAHIU,GAASI,GACTf,cAAcC,EAAMc,GAEjBJ,GAASI,CACpB,CAEA,SAASE,eACLC,SAASC,eAAe,gBAAgBC,OAC5C,CAEA,SAASC,gBAAgBnB,GACrBgB,SAASC,eAAe,eACnBG,YAAchB,KAAKC,UAAUL,EAAQ,KAAM,KACpD,CAEA,SAASqB,eAAetB,GACpB,IAAIuB,EAAMN,SAASC,eAAe,eAAeM,MAEjD,GAAID,EAKJ,IACI,IAAIE,EAASpB,KAAKO,MAAMW,GACrBE,GACC1B,cAAcC,EAAMyB,EAC5B,CAAE,MAAOC,GAEL,YADAC,MAAM,iCAEV,MAXIA,MAAM,6CAad","sources":["src/common/config/configPersistance.js"],"sourcesContent":["function configKey(k) {\n    return `config-${k}`\n}\n\nfunction persistConfig(page, config) {\n    console.log('persisting config')\n    let configJson = JSON.stringify(config);\n    localStorage.setItem(configKey(page), configJson)\n}\n\nfunction retrieveConfig(page) {\n    let saved = localStorage.getItem(configKey(page))\n\n    return saved ? JSON.parse(saved) : null\n}\n\nfunction loadConfig(page, existing) {\n    console.log('Loading config')\n    if(!existing) {\n        console.log('Invalid existing config, loading from localStorage')\n        return retrieveConfig(page)\n    }\n    \n    if(existing.override) {\n        console.log('Overriding saved config with existing')\n        persistConfig(page, existing)\n        return existing\n    }\n\n    let saved = retrieveConfig(page)\n\n    if(!saved && existing)\n        persistConfig(page, existing)\n\n    return saved || existing\n}\n\nfunction configurator() {\n    document.getElementById('configurator').click()\n}\n\nfunction buildConfigForm(config) {\n    document.getElementById('config-json')\n        .textContent = JSON.stringify(config, null, '\\t')\n}\n\nfunction saveConfigForm(page) {\n    let txt = document.getElementById('config-json').value\n\n    if(!txt) {\n        alert('No se pudede dejar vacia la configuracion!')\n        return\n    }\n\n    try {\n        let parsed = JSON.parse(txt)\n        if(parsed)\n            persistConfig(page, parsed)\n    } catch (error) {\n        alert('La configuracion no es valida!')\n        return\n    }\n\n}"],"names":["configKey","k","persistConfig","page","config","console","log","configJson","JSON","stringify","localStorage","setItem","retrieveConfig","saved","getItem","parse","loadConfig","existing","override","configurator","document","getElementById","click","buildConfigForm","textContent","saveConfigForm","txt","value","parsed","error","alert"],"version":3,"file":"index.b8a1d344.js.map"}