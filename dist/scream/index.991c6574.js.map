{"mappings":"AAAA,IAAIA,aACAC,aACAC,QAAU,EACd,MAAMC,eAAiBC,WAAW,SAAUC,QAC5C,IAAIC,WAAaC,WAAWC,MAAMC,aAClC,IAAIC,MAAQH,WAAWC,MAAME,MACzBC,aAAeJ,WAAWC,MAAMI,eAEpC,IAAIC,YAAc,SAAUC,GACxBC,QAAQC,IAAI,yBACZ,IAAIC,EAAchB,aAAaiB,wBAAwBJ,GACnDK,EAAWlB,aAAamB,iBAG5BD,EAASE,QAFK,KAGdJ,EAAYK,QAAQH,GAEpB,IAAII,EAAeJ,EAASK,kBACxBC,EAAiB,IAAIC,WAAWH,GAEhCI,EAAa,WACbC,WAAWD,EAAYrB,YACvBa,EAASU,qBAAqBJ,GAE9B,IADA,IAAIK,EAAQ,EACHC,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAIC,EAAIP,EAAeM,GACvBD,GAASE,EAAIA,CACjB,CACA,IAAIC,EAAMC,KAAKC,KAAKL,EAAQP,GAC5BrB,QAAgBgC,KAAKlB,IAAIiB,GAAOC,KAAKlB,IAAI,IAA/B,GACVd,QAAUgC,KAAKE,IAAIlC,QAAS,GACxBQ,OACAK,QAAQC,IAAI,kBAAkBkB,KAAKG,MAAMnC,cAEjD,EACAyB,GACJ,EAEIW,sBAAwB,SAAUC,GAClCxB,QAAQC,IAAI,mCACZD,QAAQC,IAAIuB,EAChB,EAEIC,UAAY,WACZ,OAAOtC,OACX,EAEIuC,kBAAoB,WACpB,OAAQvC,QAAUS,YACtB","sources":["src/scream/audio_logic.js"],"sourcesContent":["var AudioContext;\nvar audioContent;\nvar audioDB = 0;\nconst gamegameConfig = loadConfig('scream', config)\nvar sampleFreq = gameConfig.audio.sampleFreqMs\nlet debug = gameConfig.audio.debug\nlet maxThreshold = gameConfig.audio.maxThresholdDB\n\nvar listenAudio = function (stream) {\n    console.log(\"Running sound allowed\")\n    var audioStream = audioContent.createMediaStreamSource(stream);\n    var analyser = audioContent.createAnalyser();\n    var fftSize = 1024;\n\n    analyser.fftSize = fftSize;\n    audioStream.connect(analyser);\n\n    var bufferLength = analyser.frequencyBinCount;\n    var frequencyArray = new Uint8Array(bufferLength);\n\n    var showVolume = function () {\n        setTimeout(showVolume, sampleFreq);\n        analyser.getByteFrequencyData(frequencyArray);\n        var total = 0\n        for (var i = 0; i < 255; i++) {\n            var x = frequencyArray[i];\n            total += x * x;\n        }\n        var rms = Math.sqrt(total / bufferLength);\n        audioDB = 20 * (Math.log(rms) / Math.log(10));\n        audioDB = Math.max(audioDB, 0); // sanity check\n        if (debug) {\n            console.log(`Audio level at ${Math.floor(audioDB)} dB`)\n        }\n    }\n    showVolume();\n}\n\nvar handleAudioNotAllowed = function (error) {\n    console.log(\"You must allow your microphone.\")\n    console.log(error);\n}\n\nvar getVolume = function () {\n    return audioDB\n}\n\nvar getThrPercReached = function () {\n    return (audioDB / maxThreshold)\n}"],"names":["AudioContext","audioContent","audioDB","gamegameConfig","loadConfig","config","sampleFreq","gameConfig","audio","sampleFreqMs","debug","maxThreshold","maxThresholdDB","listenAudio","stream","console","log","audioStream","createMediaStreamSource","analyser","createAnalyser","fftSize","connect","bufferLength","frequencyBinCount","frequencyArray","Uint8Array","showVolume","setTimeout","getByteFrequencyData","total","i","x","rms","Math","sqrt","max","floor","handleAudioNotAllowed","error","getVolume","getThrPercReached"],"version":3,"file":"index.991c6574.js.map"}